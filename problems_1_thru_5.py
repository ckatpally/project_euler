##### START PROBLEM 1 #####

#Find the sum of all the multiples of 3 or 5 below 1000.

from math import remainder

def sumOfMultiples(n):
    numbers_list = [i for i in range(1,n) if (remainder(i,3)==0 or remainder(i,5)==0)]
    print("\nSum of Multiples: ", sum(numbers_list))

sumOfMultiples(1000)


##### END PROBLEM 1 #####


##### START PROBLEM 2 #####

#Each new term in the Fibonacci sequence is generated by adding the previous two terms.
#By starting with 1 and 2, the first 10 terms will be:
#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

### Solution 1 ######
from math import remainder
from time import perf_counter


start = perf_counter()
n_fibo = 4000000
n1, n2 = 0,1
n=0
sum_fibo = 0

while True:
    n=n1+n2
    n1=n2
    n2=n
    if (n > n_fibo):
        break
    if(remainder(n,2) == 0):
        sum_fibo += n

print("\nSum of even fibo values less than {0}: {1}".format(n, sum_fibo))

print("Time:", "{:.8f}".format(perf_counter() - start))

#### Solution 2 ######
start = perf_counter()
import numpy as np
sum_of_even = 0

for i in np.arange(1, 34):
    x = np.int64((((1 + np.sqrt(5))/2) ** i - ((1 - np.sqrt(5))/2) ** i)/np.sqrt(5))
    sum_of_even += x if x%2 else 0

print("\n Sum of evens# ", sum_of_even)
print("Time:", "{:.8f}".format(perf_counter() - start))

##### END PROBLEM 2 #####


##### START PROBLEM 3 #####
#The prime factors of 13195 are 5, 7, 13 and 29.

#What is the largest prime factor of the number 600851475143 ?

import math

n=600851475143
factors_list = []
i=2

for i in range(2, int(math.sqrt(n))+1):
    while n % i == 0:
        factors_list.append(i)
        n = n/i

factors_list = list(set(factors_list))
max_prime_factor = max(factors_list)


print("\nMax prime factor {0}".format(max_prime_factor))


##### END PROBLEM 3 #####


##### START PROBLEM 4 #####
#A palindromic number reads the same both ways. The largest palindrome made from the product of two 2-digit numbers is 9009 = 91 Ã— 99.

#Find the largest palindrome made from the product of two 3-digit numbers.

palindrome_list = []

##### END PROBLEM 4 #####

for i in range(999, 99, -1):
    for j in range(999, 99, -1):
        if (i>0 and j>0):
            n = str( i * j)
            if n == n[::-1]:
                n = int(n)
                palindrome_list.append(n)
#print(palindrome_list)
print ("\nThe largest palindrome made from the product of two 3-digit numbers is: ", max(palindrome_list))


##### END PROBLEM 4 #####


##### START PROBLEM 5 #####

#2520 is the smallest number that can be divided by each of the numbers from 1 to 10 without any remainder.

#What is the smallest positive number that is evenly divisible by all of the numbers from 1 to 20

def lcm(n):
    n_lcm = 1
    for i in range(1, n + 1):
        #print (i)
        n_lcm = int((n_lcm * i)/math.gcd(n_lcm, i))
    print("\nsmallest positive number that is evenly divisible by all of the numbers from 1 to 20: ", n_lcm)

lcm(20)

print("\n")

##### END PROBLEM 5 #####
